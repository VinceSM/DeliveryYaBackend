// <auto-generated />
using System;
using DeliveryYaBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DeliveryYaBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251003203229_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Cliente", b =>
                {
                    b.Property<int>("idcliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idcliente"));

                    b.Property<string>("calle")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("celular")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("ciudad")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("dni")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateOnly>("nacimiento")
                        .HasColumnType("date");

                    b.Property<string>("nombreCompleto")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int>("numero")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("idcliente");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("DeliveryYaBackend.Models.Admin", b =>
                {
                    b.Property<int>("idadmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idadmin"));

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("usuario")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("idadmin");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("DeliveryYaBackend.Models.Categoria", b =>
                {
                    b.Property<int>("idcategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idcategoria"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("idcategoria");

                    b.ToTable("categoria");
                });

            modelBuilder.Entity("DeliveryYaBackend.Models.CategoriaProducto", b =>
                {
                    b.Property<int>("CategoriaIdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("categoria_idcategoria");

                    b.Property<int>("ProductoIdProducto")
                        .HasColumnType("int")
                        .HasColumnName("producto_idproducto");

                    b.Property<int?>("Categoriaidcategoria")
                        .HasColumnType("int");

                    b.HasKey("CategoriaIdCategoria", "ProductoIdProducto");

                    b.HasIndex("Categoriaidcategoria");

                    b.HasIndex("ProductoIdProducto");

                    b.ToTable("categoria_has_producto");
                });

            modelBuilder.Entity("DeliveryYaBackend.Models.Comercio", b =>
                {
                    b.Property<int>("idcomercio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idcomercio"));

                    b.Property<string>("alias")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("calle")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("celular")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("ciudad")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cvu")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("destacado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("encargado")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("fotoPortada")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<decimal>("latitud")
                        .HasColumnType("decimal(10,7)");

                    b.Property<decimal>("longitud")
                        .HasColumnType("decimal(10,7)");

                    b.Property<string>("nombreComercio")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int>("numero")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("idcomercio");

                    b.ToTable("comercio");
                });

            modelBuilder.Entity("DeliveryYaBackend.Models.ComercioCategoria", b =>
                {
                    b.Property<int>("ComercioIdComercio")
                        .HasColumnType("int")
                        .HasColumnName("comercio_idcomercio");

                    b.Property<int>("CategoriaIdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("categoria_idcategoria");

                    b.Property<int?>("Categoriaidcategoria")
                        .HasColumnType("int");

                    b.HasKey("ComercioIdComercio", "CategoriaIdCategoria");

                    b.HasIndex("CategoriaIdCategoria");

                    b.HasIndex("Categoriaidcategoria");

                    b.ToTable("comercio_has_categoria");
                });

            modelBuilder.Entity("DeliveryYaBackend.Models.ComercioHorario", b =>
                {
                    b.Property<int>("ComercioIdComercio")
                        .HasColumnType("int")
                        .HasColumnName("comercio_idcomercio");

                    b.Property<int>("HorariosIdHorarios")
                        .HasColumnType("int")
                        .HasColumnName("horarios_idhorarios");

                    b.Property<int?>("Horariosidhorarios")
                        .HasColumnType("int");

                    b.HasKey("ComercioIdComercio", "HorariosIdHorarios");

                    b.HasIndex("HorariosIdHorarios");

                    b.HasIndex("Horariosidhorarios");

                    b.ToTable("comercio_has_horarios");
                });

            modelBuilder.Entity("DeliveryYaBackend.Models.EstadoPedido", b =>
                {
                    b.Property<int>("idestado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idestado"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("idestado");

                    b.ToTable("EstadoPedidos");
                });

            modelBuilder.Entity("DeliveryYaBackend.Models.Horarios", b =>
                {
                    b.Property<int>("idhorarios")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idhorarios"));

                    b.Property<bool>("abierto")
                        .HasColumnType("tinyint(1)");

                    b.Property<TimeSpan?>("apertura")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan?>("cierre")
                        .HasColumnType("time(6)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("dias")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("idhorarios");

                    b.ToTable("horarios");
                });

            modelBuilder.Entity("DeliveryYaBackend.Models.ItemPedido", b =>
                {
                    b.Property<int>("iditemPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("iditemPedido"));

                    b.Property<int>("ComercioIdComercio")
                        .HasColumnType("int");

                    b.Property<int?>("Comercioidcomercio")
                        .HasColumnType("int");

                    b.Property<int>("PedidoIdPedido")
                        .HasColumnType("int");

                    b.Property<int>("ProductoIdProducto")
                        .HasColumnType("int");

                    b.Property<int>("cantProducto")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("precioFinal")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("iditemPedido");

                    b.HasIndex("ComercioIdComercio");

                    b.HasIndex("Comercioidcomercio");

                    b.HasIndex("PedidoIdPedido");

                    b.HasIndex("ProductoIdProducto");

                    b.ToTable("ItemPedidos");
                });

            modelBuilder.Entity("DeliveryYaBackend.Models.MetodoPagoPedido", b =>
                {
                    b.Property<int>("idmetodo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idmetodo"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("metodo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("idmetodo");

                    b.ToTable("MetodoPagoPedidos");
                });

            modelBuilder.Entity("DeliveryYaBackend.Models.Pedido", b =>
                {
                    b.Property<int>("idpedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idpedido"));

                    b.Property<int>("ClienteIdCliente")
                        .HasColumnType("int")
                        .HasColumnName("cliente_idcliente");

                    b.Property<int>("EstadoPedidoIdEstado")
                        .HasColumnType("int")
                        .HasColumnName("estadopedido_idestado");

                    b.Property<int>("MetodoPagoPedidoIdMetodo")
                        .HasColumnType("int")
                        .HasColumnName("metodoPagoPedido_idmetodo");

                    b.Property<int>("RepartidorIdRepartidor")
                        .HasColumnType("int")
                        .HasColumnName("repartidor_idrepartidor");

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<bool>("comercioRepartidor")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<TimeSpan>("hora")
                        .HasColumnType("time(6)");

                    b.Property<bool>("pagado")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("subtotalPedido")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("idpedido");

                    b.HasIndex("ClienteIdCliente");

                    b.HasIndex("EstadoPedidoIdEstado");

                    b.HasIndex("MetodoPagoPedidoIdMetodo");

                    b.HasIndex("RepartidorIdRepartidor");

                    b.ToTable("pedido");
                });

            modelBuilder.Entity("DeliveryYaBackend.Models.Producto", b =>
                {
                    b.Property<int>("idproducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idproducto"));

                    b.Property<int>("StockIdStock")
                        .HasColumnType("int")
                        .HasColumnName("stock_idstock");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("fotoPortada")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<bool?>("oferta")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("precioUnitario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("unidadMedida")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("idproducto");

                    b.HasIndex("StockIdStock");

                    b.ToTable("producto");
                });

            modelBuilder.Entity("DeliveryYaBackend.Models.Stock", b =>
                {
                    b.Property<int>("idstock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idstock"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("medida")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.Property<bool>("stockIlimitado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("idstock");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("DeliveryYaBackend.Models.TarifaRepartidorLibre", b =>
                {
                    b.Property<int>("idtarifa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idtarifa"));

                    b.Property<int>("RepartidorIdRepartidor")
                        .HasColumnType("int")
                        .HasColumnName("repartidor_idrepartidor");

                    b.Property<int>("cantPedidos")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("kmRecorridos")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("tarifaBase")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("idtarifa");

                    b.HasIndex("RepartidorIdRepartidor");

                    b.ToTable("tarifaRepartidorLibre");
                });

            modelBuilder.Entity("DeliveryYaBackend.Models.Vehiculo", b =>
                {
                    b.Property<int>("idvehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idvehiculo"));

                    b.Property<string>("companiaSeguros")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("marca")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("modelo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("patente")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<bool>("seguro")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("idvehiculo");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("Repartidor", b =>
                {
                    b.Property<int>("idrepartidor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idrepartidor"));

                    b.Property<string>("calle")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int>("cantPedidos")
                        .HasColumnType("int");

                    b.Property<string>("celular")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("ciudad")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cvu")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("dni")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<bool>("libreRepartidor")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateOnly>("nacimiento")
                        .HasColumnType("date");

                    b.Property<string>("nombreCompleto")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int>("numero")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("puntuacion")
                        .HasColumnType("decimal(10,1)");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("vehiculoIdVehiculo")
                        .HasColumnType("int");

                    b.HasKey("idrepartidor");

                    b.HasIndex("vehiculoIdVehiculo");

                    b.ToTable("repartidor");
                });

            modelBuilder.Entity("DeliveryYaBackend.Models.CategoriaProducto", b =>
                {
                    b.HasOne("DeliveryYaBackend.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaIdCategoria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DeliveryYaBackend.Models.Categoria", null)
                        .WithMany("CategoriaProductos")
                        .HasForeignKey("Categoriaidcategoria")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DeliveryYaBackend.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoIdProducto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("DeliveryYaBackend.Models.ComercioCategoria", b =>
                {
                    b.HasOne("DeliveryYaBackend.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaIdCategoria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DeliveryYaBackend.Models.Categoria", null)
                        .WithMany("ComercioCategorias")
                        .HasForeignKey("Categoriaidcategoria")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DeliveryYaBackend.Models.Comercio", "Comercio")
                        .WithMany("ComercioCategorias")
                        .HasForeignKey("ComercioIdComercio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Comercio");
                });

            modelBuilder.Entity("DeliveryYaBackend.Models.ComercioHorario", b =>
                {
                    b.HasOne("DeliveryYaBackend.Models.Comercio", "Comercio")
                        .WithMany("ComercioHorarios")
                        .HasForeignKey("ComercioIdComercio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DeliveryYaBackend.Models.Horarios", "Horarios")
                        .WithMany()
                        .HasForeignKey("HorariosIdHorarios")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DeliveryYaBackend.Models.Horarios", null)
                        .WithMany("ComercioHorarios")
                        .HasForeignKey("Horariosidhorarios")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Comercio");

                    b.Navigation("Horarios");
                });

            modelBuilder.Entity("DeliveryYaBackend.Models.ItemPedido", b =>
                {
                    b.HasOne("DeliveryYaBackend.Models.Comercio", "Comercio")
                        .WithMany()
                        .HasForeignKey("ComercioIdComercio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DeliveryYaBackend.Models.Comercio", null)
                        .WithMany("ItemsPedido")
                        .HasForeignKey("Comercioidcomercio")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DeliveryYaBackend.Models.Pedido", "Pedido")
                        .WithMany("ItemsPedido")
                        .HasForeignKey("PedidoIdPedido")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DeliveryYaBackend.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoIdProducto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Comercio");

                    b.Navigation("Pedido");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("DeliveryYaBackend.Models.Pedido", b =>
                {
                    b.HasOne("Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteIdCliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DeliveryYaBackend.Models.EstadoPedido", "EstadoPedido")
                        .WithMany()
                        .HasForeignKey("EstadoPedidoIdEstado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DeliveryYaBackend.Models.MetodoPagoPedido", "MetodoPagoPedido")
                        .WithMany()
                        .HasForeignKey("MetodoPagoPedidoIdMetodo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Repartidor", "Repartidor")
                        .WithMany()
                        .HasForeignKey("RepartidorIdRepartidor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("EstadoPedido");

                    b.Navigation("MetodoPagoPedido");

                    b.Navigation("Repartidor");
                });

            modelBuilder.Entity("DeliveryYaBackend.Models.Producto", b =>
                {
                    b.HasOne("DeliveryYaBackend.Models.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockIdStock")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("DeliveryYaBackend.Models.TarifaRepartidorLibre", b =>
                {
                    b.HasOne("Repartidor", "Repartidor")
                        .WithMany()
                        .HasForeignKey("RepartidorIdRepartidor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Repartidor");
                });

            modelBuilder.Entity("Repartidor", b =>
                {
                    b.HasOne("DeliveryYaBackend.Models.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("vehiculoIdVehiculo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("DeliveryYaBackend.Models.Categoria", b =>
                {
                    b.Navigation("CategoriaProductos");

                    b.Navigation("ComercioCategorias");
                });

            modelBuilder.Entity("DeliveryYaBackend.Models.Comercio", b =>
                {
                    b.Navigation("ComercioCategorias");

                    b.Navigation("ComercioHorarios");

                    b.Navigation("ItemsPedido");
                });

            modelBuilder.Entity("DeliveryYaBackend.Models.Horarios", b =>
                {
                    b.Navigation("ComercioHorarios");
                });

            modelBuilder.Entity("DeliveryYaBackend.Models.Pedido", b =>
                {
                    b.Navigation("ItemsPedido");
                });
#pragma warning restore 612, 618
        }
    }
}
